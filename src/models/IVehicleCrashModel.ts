import { IDamageModel } from "./IDamageModel";
import { IDistractionModel } from "./IDistractionModel";
import { IDriverImpairModel } from "./IDriverImpairModel";
import { IFactorModel } from "./IFactorModel";
import { IManeuverModel } from "./IManeuverModel";
import { IViolationModel } from "./IViolationModel";
import { IVisionObstructionModel } from "./IVisionObstructionModel";

export interface IVehicleCrashModel {
  vehicleNumber?: number;
  numberOfMotorVehiclesInTransportMvit?: number;
  numberOfOccupants?: number;
  dayOfCrash?: number;
  monthOfCrash?: number;
  hourOfCrash?: number;
  minuteOfCrash?: number;
  firstHarmfulEvent?: number;
  firstHarmfulEventName?: string;
  mannerOfCollision?: number;
  unitType?: string;
  hitAndRun?: string;
  registrationState?: number;
  registrationStateName?: string;
  registeredVehicleOwner?: number;
  registeredVehicleOwnerName?: string;
  vehicleMake?: number;
  vehicleMakeName?: string;
  vehicleModel?: number;
  makeModelCombined?: number;
  bodyType?: number;
  bodyTypeName?: string;
  vehicleModelYear?: number;
  vehicleIdentificationNumberVin?: string;
  vehicleTrailing?: string;
  jackknife?: string;
  mcidIssuingAuthority?: number;
  mcidIdentificationNumber?: string;
  motorCarrierIdentificationNumberMcid?: string;
  grossVehicleWeightRating?: string;
  vehicleConfiguration?: number;
  vehicleConfigurationName?: string;
  cargoBodyType?: number;
  cargoBodyTypeName?: string;
  hazardousMaterialInvolvement?: string;
  hazardousMaterialPlacard?: number;
  hazardousMaterialIdentificationNumber?: number;
  hazardousMaterialClassNumber?: number;
  releaseOfHazardousMaterialFromTheCargoCompartment?: string;
  busUse?: string;
  specialUse?: number;
  specialUseName?: string;
  emergencyMotorVehicleUse?: string;
  travelSpeed?: number;
  underrideOverride?: number;
  rollover?: string;
  locationOfRollover?: string;
  initialContactPoint?: number;
  extentOfDamage?: string;
  vehicleRemoval?: string;
  mostHarmfulEvent?: number;
  relatedFactorsVehicleLevel1?: number;
  relatedFactorsVehicleLevel2?: number;
  fireOccurrence?: string;
  driverPresence?: string;
  driversLicenseState?: number;
  driversZipCode?: number;
  nonCdlLicenseStatus?: number;
  nonCdlLicenseType?: string;
  commercialMotorVehicleLicenseStatus?: number;
  complianceWithCdlEndorsements?: string;
  licenseComplianceWithClassOfVehicle?: string;
  complianceWithLicenseRestrictions?: number;
  driverHeight?: number;
  driverWeight?: number;
  previousRecordedCrashes?: number;
  previousRecordedSuspensionsAndRevocations?: number;
  previousDwiConvictions?: number;
  previousSpeedingConvictions?: number;
  previousOtherMovingViolationConvictions?: number;
  monthOfFirstCrashSuspensionOrConviction?: number;
  yearOfFirstCrashSuspensionOrConviction?: number;
  monthOfLastCrashSuspensionOrConviction?: number;
  yearOfLastCrashSuspensionOrConviction?: number;
  speedingRelated?: string;
  relatedFactorsDriverLevel1?: number;
  relatedFactorsDriverLevel2?: number;
  relatedFactorsDriverLevel3?: number;
  relatedFactorsDriverLevel4?: number;
  trafficwayDescription?: string;
  totalLanesInRoadway?: number;
  speedLimit?: number;
  roadwayAlignment?: string;
  roadwayGrade?: string;
  roadwaySurfaceType?: string;
  roadwaySurfaceCondition?: number;
  roadwaySurfaceConditionName?: string;
  trafficControlDevice?: number;
  trafficControlDeviceFunctioning?: string;
  preEventMovementPriorToRecognitionOfCriticalEvent?: number;
  criticalEventPrecrash?: number;
  criticalEventPrecrashName?: string;
  attemptedAvoidanceManeuver?: number;
  attemptedAvoidanceManeuverName?: string;
  preImpactStability?: string;
  preImpactLocation?: number;
  crashType?: number;
  crashTypeName?: string;
  fatalitiesInVehicle?: number;
  driverDrinking?: string;
  timestampOfCrash?: Date;

  damages: IDamageModel[];
  distractions: IDistractionModel[];
  driversImpair: IDriverImpairModel[];
  factors: IFactorModel[];
  maneuvers: IManeuverModel[];
  violations: IViolationModel[];
  visionObstructions: IVisionObstructionModel[];
}
